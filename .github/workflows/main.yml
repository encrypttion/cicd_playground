name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable]

    steps:
    - uses: actions/checkout@v2

    - name: Install system dependencies on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update && \
        sudo apt-get install -y \
          libgtk-3-dev \
          libwebkit2gtk-4.1-dev \
          libsoup-3.0-dev \
          libglib2.0-dev \
          libgdk-pixbuf2.0-dev \
          libcairo2-dev

    - name: Install pkgconfiglite on Windows
      if: matrix.os == 'windows-latest'
      run: choco install pkgconfiglite --params "/NoAdmin" -y || echo "pkgconfiglite installation failed"

    - name: Install Homebrew dependencies on macOS
      if: matrix.os == 'macOS-latest'
      run: brew install pkg-config gtk+3  # Add other dependencies as needed

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true
        components: rustfmt, clippy

    - name: Log before building
      run: echo "Building the project..."

    - name: Build
      working-directory: src-tauri
      run: cargo build --verbose

    - name: Run tests
      working-directory: src-tauri
      run: cargo test --verbose

    - name: Check formatting
      working-directory: src-tauri
      run: cargo fmt -- --check

    - name: Run clippy
      working-directory: src-tauri
      run: cargo clippy -- -D warnings
